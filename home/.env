
# VIM
set -o vi

# SHELL # ENV
export HISTFILE=~/.history
export HISTSIZE=5000
export SAVEHIST=5000
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC=en_US.UTF-8
export BLOCKSIZE=K
export EDITOR=vim
unset GREP_OPTIONS

# SYNC
export SYNC="$HOME/Sync"
export HG2G="${HG2G:-$SYNC}"

# GO
#FIXME, latest gopath on ubuntu
#export GOPATH=$(find /usr/lib/go-*/bin -name bin -type d | sort -r | xargs | sed 's/ /\/bin:/g')"
export GOPATH=${GOPATH:-/usr/local/opt/go/libexec/bin}:$SYNC/workspace-go
# Ubutntu: set go in system default
#sudo update-alternatives --install "/usr/bin/go" "go" "/usr/local/go/bin/go" 0
#sudo update-alternatives --set go /usr/local/go/bin/go

# PYTHON
export WORKON_HOME=~/.pyenv

# RUBY
# export PATH=$PATH:$HOME/.gem/ruby/**/bin

# HOMESICK
test -e "$HOME/.homesick/repos/homeshick" && {
  source "$HOME/.homesick/repos/homeshick/homeshick.sh"
  fpath=($HOME/.homesick/repos/homeshick/completions $fpath)
}

# TRAVIS
[ -f $HOME/.travis/travis.sh ] && source $HOME/.travis/travis.sh

# FZF
[ which fzf > /dev/null  -a -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# PATH
export CDPATH=".:~/$SYNC:$PROJECTS:$CDPATH"
#
# system priviledged user
export PATH="$PATH:/usr/bin:/sbin:/usr/sbin:/usr/X11R6/bin"
# system
export PATH="/usr/local/bin:/opt/bin:/snap/bin:$PATH"
# user
export PATH="$GOPATH/bin:$PATH"
export PATH="$HOME/.local/bin:$HOME/bin:$HOME/opt/bin:$PATH"

# SSH
test -e ~/.ssh/id_ed25519 &&\
  export SSH_KEY_PATH="~/.ssh/id_ed25519"
if [ -z $SSH_AUTH_SOCK ] ; then
  S=(  /run/user/$(id -u)/ssh-agent.socket
       /run/user/$(id -u)/openssh_agent
     )
  for s in ${S[@]}; do
    test -e $s \
      && export SSH_AUTH_SOCK=$s\
      && break
  done
fi

## COMMON FUNCTIONS / COMPLETITION

# Gcloud
if [ -f "$SYNC/opt/google-cloud-sdk" ]; th/n
# The next line updates PATH for the Google Cloud SDK.
  source "$SYNC/opt/google-cloud-sdk/path.zsh.inc"
# The next line enables shell command completion for gcloud.
  source $SYNC/opt/google-cloud-sdk/completion.zsh.inc"
fi

# K8s
if [ $commands[kubectl] ]; then
  source <(kubectl completion zsh)
elif [ -e $SYNC/opt/kubectx/completion ]; then
  source $SYNC/opt/kubectx/completion/*.zsh
fi


# Chef
function knife-reset {
  # set environment for knife/chef
  export SSL_CERT_FILE=/opt/chefdk/embedded/ssl/certs/cacert.pem
  alias ack="ack --ignore-dir .kitchen" # to ignore log files from CI
}



